<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnSair.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAAO1JREFUWEft
        lzsOwjAQRCMuQgPci0/HR6LKQRAN16SDAmYKJAuvP7uOCQiP9Bpr43mQCOKuRcgcbEA/MGvAvaM5gDt4
        VIJ774CYBahZ/uIGZsDLCkgX1IBdXo5AGq4Bu7w0gZTAVVgLkZpVC3DDKTg7ayE4w9mYhOkbuIAJODlr
        7+TMEJMAiRXklhOzAJGKNOWkSIC4hdpyUixA+LCxmOQ8nC6/LzDqLZAKtRJmgViRRsIkkFOQK6EW+Iqf
        4tQfjEtq1iQwJE1AFPjkS+kSeOGhYdTXcmYPakqwfAuioR2PUdLxqgTuGfzk/5quewKqyJ+DOyKGhAAA
        AABJRU5ErkJggg==
</value>
  </data>
  <data name="btnAtivar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAIESURBVFhH1dbPK2VxGMfx2zCLWdkgKWXj1wbFHmN2WFkrJQub2chKrOcfGERhxtJmZpKSsiBb
        2VohdqhJSEzD+1P3nr733uec8z3nHgtPvUpPz/d7r3Pu9/k+ufcW1fiMOWzgN37l/1ZuAKrJPNqxhhu8
        xLiGarWm4qjHMp5hfVgUrVmC9kgVXTiDtXkSl+hFohjBPawN07jDMLyiG1pgbVSJB8Q+Cb2vC1gbZOEc
        dQiNFVgLs7QIM3Rs0vzaLY/YKckV6DPaUBY6u9aCNKbRgP9OzrWKolD3UgOxipM6RBU2nVwpNbSijjkI
        qzApnZ4WjDm5MP0IYh5WUVJTaIRPy55FED9gFSWxiw/YdnJR1hGEbjWrqECb65ScODnXXzRh0snF0S0a
        RNwX0Lv9AjWqo3zONY5m3Dq5OEVfwOcV6GyPogb7+Zz8gR79npPzoWMfhIYJq6jUP0zgE7ago6vz/hVW
        fZSiH6EmGavIouYyg4/Q5dKKNDdnH4JQ47iCVRjmG7TuwMn50pMrG93StOJjI+ejrBUr9CifYC3Iki6j
        DpihGc5alKXvCA2dcw0N1sIsaMasRWS85UjWA6/QAJnll9BeQ0gUnTiFtWESmjG9//PS0ACpGS7NqKYT
        tYDYd+4TmuF0dn2mJtWo1pz7Kg11Pk0y6uM/oRtNdJkpp/aqmvcSudwr8uKIekJQHAUAAAAASUVORK5C
        YII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGxsbE1JW
        Vj4xMTFEFx4eIgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIXFxcWcXFxRLa4
        uJ3h4eHd8vLy/+zs7PF0dnZ7GBgYFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAzMzMFFSAgGDY2Ni+UlJRuvL29q97e
        3trx8fH+8vLy/+Pd3v+6o6b/6ufn/9nZ2dEeHh4qAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQgICAQGhoaHScnJy5vcnJXo6WliMLExLTd3d3X7+/v+PLy
        8v/y8vL/4tzd/7ynqf+FYGH/cURH/29BRf/Sxsf/6urq7kJCQmAcHBwSAAAAAAAAAAAAAAAAAAAAAAAA
        AAAgICAIHBwcGxwcHCQcHBwtW1tbSYaJiW6io6OOubm5qs3OzsHh4eHd8PDw+PLy8v/y8vL/8vLy/+Lc
        3f/Fs7b/noGD/3hOUf9xRkf/ZFdH/1BnQP9FeED/blNM/9LGx//y8vL/3t7e2hoeHjwAAAAAAAAAAAAA
        AAAAAAAAv7+/TMzNzb3Z29vS5OTk4u3u7vfy8vL/8vLy//Ly8v/y8vL/7+7u/9vS0//FsrX/rJGU/4tq
        a/90Rkr/cktL/2lYS/9WXkD/S29A/0V4QP9FeED/RXhA/0V4QP9sUkr/dUdM/7iipP/y8vL/VFdXVQAA
        AAAAAAAAAAAAAPHx8STx8fH67+3u/+Lc3f/UyMr/xbK1/7OanP+afH7/hmFi/3ZLTv9xQkb/cU5L/2hX
        Sv9YXkH/T2pA/0Z1QP9FeED/RXhA/0V4QP9FeED/RXhA/0V2P/9Ic0D/S25A/1NhQP9iTUD/qpCS//Ly
        8v9aXV1mICAgEAAAAAAAAAAA8vLyYfLy8v+HYWP/cUhJ/3BTTf9oV0n/XFlC/1RgQP9OakD/SHNA/0V4
        QP9FeED/RXhA/0V2P/9HdED/SXJA/0pwQP9MbT//TmtA/1BnQP9SZED/U2JA/1NiQP9TYkD/U2JA/19Q
        QP+qkJL/8vLy/93d3dgyNTVSAAAAAAAAAADz8/Nm8vLy/31VV/9SZD//TG0//01sQP9Na0D/TWtA/05p
        QP9QaED/UGdA/1FlQP9TY0D/U2JA/1NiQP9TYkD/U2JA/1NiQP9TYkD/U2JA/1NiQP9TYkD/U2JA/1Ni
        QP9TYkD/X1BA/4ZbYf+7paj/8vLy/5iZmY8AAAADAAAAAPPz82by8vL/eFRU/2CPbv9doHf/XaB3/12g
        d/9doHf/XaB3/12gd/9doHf/XaB3/12gd/9doHf/XaB3/12gd/9doHf/XaB3/12gd/9doHf/XaB3/12g
        d/9doHf/XaB3/12gd/9flnH/go6B/4NdYP/y8vL/qKmpmwAAAAMAAAAA8/PzZvLy8v92VFT/ZK2I/2LD
        lv9iw5b/YsOW/2LDlv9iw5b/YsOW/2LDlv9iw5b/YsOW/2LDlv9iw5b/YsOW/2LDlv9iw5b/YsOW/2LD
        lv9iw5b/YsOW/2LDlv9iw5b/YsOW/2LDlv9krYj/f1td//Ly8v+oqambAAAAAwAAAADz8/Nm8vLy/3tY
        Wf9krYj/YsOW/2LDlv9dtYb/U5to/1ObaP9Tm2j/U5to/1ObaP9Tm2j/U5to/1ObaP9Tm2j/U5to/1Ob
        aP9Tm2j/U5to/1ObaP9Tm2j/U5to/121hv9iw5b/YsOW/2StiP9/W13/8vLy/6ipqZsAAAADAAAAAPPz
        82by8vL/f1td/2StiP9iw5b/YcCT/06PWv9FeED/RXhA/0V4QP9FeED/RXhA/0V4QP9FeED/RnpC/0V6
        Qv9FeED/RXhA/0V4QP9FeED/RXhA/0V4QP9FeED/To9b/2HAk/9iw5b/ZK2I/39bXf/y8vL/qKmpmwAA
        AAMAAAAA8/PzZvLy8v9/W13/ZK2I/2LDlv9If0j/RXhA/0V4QP9FeED/RXhA/0V4QP9FeED/RXlB/1Sf
        bf9hwJP/YcCT/1Sfbf9FeUH/RXhA/0V4QP9FeED/RXhA/0V4QP9FeED/SH9I/2LDlv9krYj/f1td//Ly
        8v+oqambAAAAAwAAAADz8/Nm8vLy/39bXf9krYj/YsOW/0h+R/9FeED/RXhA/0V4QP9FeED/RXhA/0V4
        QP9Pk1//YsOW/2LDlv9iw5b/YsOW/0+SXv9FeED/RXhA/0V4QP9FeED/RXhA/0V4QP9Ifkf/YsOW/2St
        iP9/W13/8vLy/6ipqZsAAAADAAAAAPPz82by8vL/f1td/2StiP9iw5b/SH5H/0qETv9TnGn/RXpC/0V4
        QP9FeED/RXhA/1qtfP9iw5b/YsOW/2LDlv9iw5b/Wax8/0V4QP9FeED/RXhA/0Z6Qv9SnGn/SoRO/0h+
        R/9iw5b/ZK2I/39bXf/y8vL/qKmpmwAAAAMAAAAA8/PzZvLy8v9/W13/ZK2I/2LDlv9Ifkf/VaJw/2LD
        lv9LiFL/RXhA/0V4QP9FeED/W7KC/2LDlv9iw5b/YsOW/2LDlv9csoP/RXhA/0V4QP9FeED/S4ZR/2LD
        lv9Vo3H/SH5H/2LDlv9krYj/f1td//Ly8v+oqambAAAAAwAAAADz8/Nm8vLy/39bXf9krYj/YsOW/0h+
        R/9HfEX/TY1Y/0V5Qf9FeED/RXhA/0V4QP9Wo3L/YsOW/2LDlv9iw5b/YsOW/1Wjcf9FeED/RXhA/0V4
        QP9FeED/TYtW/0h+R/9Ifkf/YsOW/2StiP9/W13/8vLy/6ipqZsAAAADAAAAAPPz82by8vL/f1td/2St
        iP9iw5b/SH5H/0V4QP9FeED/RXhA/0V4QP9FeED/RXhA/0iASf9gvI//YsOW/2LDlv9gvI//SIBJ/0V4
        QP9FeED/RXhA/0V4QP9FeED/RXhA/0h+R/9iw5b/ZK2I/39bXf/y8vL/qKmpmwAAAAMAAAAA8/PzZvLy
        8v9/W13/ZK2I/2LDlv9Un23/R3xF/0V4QP9FeED/RXhA/0V4QP9FeED/RXhA/0iASf9TnWv/U51r/0iA
        Sf9FeED/RXhA/0V4QP9FeED/RXhA/0V4QP9HfEX/VJ9t/2LDlv9krYj/f1td//Ly8v+oqambAAAAAwAA
        AADz8/Nm8vLy/39bXf9krYj/YsOW/2LDlv9Vo3H/RXhA/0V4QP9FeED/RXhA/0V4QP9FeED/RXhA/0V4
        QP9FeED/RXhA/0V4QP9FeED/RXhA/0V4QP9FeED/RXhA/1Wjcf9iw5b/YsOW/2StiP9/W13/8vLy/6ip
        qZsAAAADAAAAAPPz82by8vL/f1td/2StiP9iw5b/YsOW/2LBlP9gvpD/YL6Q/2C+kP9gvpD/YL6Q/2C+
        kP9gvpD/YL6Q/2C+kP9gvpD/YL6Q/2C+kP9gvpD/YL6Q/2C+kP9gvpD/YsGU/2LDlv9iw5b/ZK2I/39b
        Xf/y8vL/qKmpmwAAAAMAAAAA8/PzZvLy8v9/W13/ZaWE/2K6kP9iupD/YrqQ/2K6kP9iupD/YrqQ/2K6
        kP9iupD/YrqQ/2K6kP9iupD/YrqQ/2K6kP9iupD/YrqQ/2K6kP9iupD/YrqQ/2K6kP9iupD/YrqQ/2K6
        kP9lpYT/f1td//Ly8v+oqambAAAAAwAAAADx8fFe8vLy/5Jzdv9zREn/c0RJ/3NESf9zREn/c0RJ/3NE
        Sf9zREn/c0RJ/3NESf9zREn/c0RJ/3NESf9zREn/c0RJ/3NESf9zREn/c0RJ/3NESf9zREn/c0RJ/3NE
        Sf9zREn/c0RJ/3NESf+Sc3b/8vLy/6mrq44AAAAAAAAAAPb29hzy8vLx8vLy//Ly8v/y8vL/8vLy//Ly
        8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly
        8v/y8vL/8vLy//Ly8v/y8vL/8vLy//Ly8v/u7u71pqamKwAAAAAAAAAAAAAAAPHx8SXy8vJ68vLyiPLy
        8ojy8vKI8vLyiPLy8ojy8vKI8vLyiPLy8ojy8vKI8vLyiPLy8ojy8vKI8vLyiPLy8ojy8vKI8vLyiPLy
        8ojy8vKI8vLyiPLy8ojy8vKI8vLyiPLy8ojy8vKI8vLyevHx8SUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////////8P///wB///AAf/wAAD4AAAA8AAAAOAAAABgAAAAYAA
        AACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAA
        AAGAAAABwAAAA/////////////////////8=
</value>
  </data>
</root>